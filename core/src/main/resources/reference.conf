# --------- NETWORK ----------
# The TCP port TSD should use for communications
tsd.network.port = 7000

# The IPv4 network address to bind to, defaults to all addresses
tsd.network.bind = 0.0.0.0

# Enables Nagel's algorithm to reduce the number of packets sent over the
# network, default is True
tsd.network.tcp_no_delay = true

# Determines whether or not to send keepalive packets to peers, default
# is True
tsd.network.keep_alive = true

# Determines if the same socket should be used for new connections, default
# is True
tsd.network.reuse_address = true

# Number of worker threads dedicated to Netty, defaults to # of CPUs * 2
#tsd.network.worker_threads = 8

# Whether or not to use NIO or tradditional blocking IO, defaults to True
tsd.network.async_io = true

# ----------- HTTP -----------
# The location of static files for the HTTP GUI interface.
tsd.http.staticroot = "static"

# Where TSD should write it's cache files to
tsd.http.cachedir = "cache"

tsd.http.show_stack_trace = true
tsd.http.request.enable_chunked = false
tsd.http.request.max_chunk = 4096
#tsd.http.request.cors_domains =
tsd.http.request.cors_headers = "Authorization, Content-Type, Accept, Origin, User-Agent, DNT, Cache-Control, X-Mx-ReqToken, Keep-Alive, X-Requested-With, If-Modified-Since"

# --------- CORE ----------
# Whether or not to automatically create UIDs for new metric types, default
# is False
tsd.core.auto_create_metrics = false

tsd.core.auto_create_tagks = true
tsd.core.auto_create_tagvs = true

tsd.core.meta.enable_realtime_ts = false
tsd.core.meta.enable_realtime_uid = false
tsd.core.meta.enable_tsuid_incrementing = false
tsd.core.meta.enable_tsuid_tracking = false
tsd.core.socket.timeout = 0
tsd.core.tree.enable_processing = false

# Control if the UID cache should be prepopulated on startup
# or not and how many UIDs to fetch
tsd.core.preload_uid_cache.enabled = false
tsd.core.preload_uid_cache.max_entries = 300000

# --------- PLUGINS ----------
tsd.rtpublisher.enable = false
#tsd.rtpublisher.plugin =

tsd.search.enable = false
#tsd.search.plugin =

# --------- STORAGE ----------
# Whether or not to enable data compaction in HBase, default is True
tsd.storage.enable_compaction = true

# How often, in milliseconds, to flush the data point queue to storage,
# default is 1,000
tsd.storage.flush_interval = 1000

# Which storage adapter to use
tsd.storage.adapter = net.opentsdb.storage.cassandra.CassandraStoreDescriptor

tsd.storage.fix_duplicates = false

# --------- HBase ----------
# Name of the HBase table where data points are stored, default is "tsdb"
tsd.storage.hbase.data_table = tsdb

# Name of the HBase table where UID information is stored, default is "tsdb-uid"
tsd.storage.hbase.uid_table = tsdb-uid

# Name of the HBase table where tree information is stored, default is "tsdb-tree"
tsd.storage.hbase.tree_table = tsdb-tree

# Name of the HBase table where meta information is stored, default is "tsdb-meta"
tsd.storage.hbase.meta_table = tsdb-meta

# Path under which the znode for the -ROOT- region is located, default is "/hbase"
tsd.storage.hbase.zk_basedir = /hbase

# A space separated list of Zookeeper hosts to connect to, with or without
# port specifiers, default is "localhost"
tsd.storage.hbase.zk_quorum = localhost

# --------- Cassandra ----------
tsd.storage.cassandra.nodes = ["127.0.0.1:9042"]
tsd.storage.cassandra.protocolVersion = 2



# TODO fix these
tsd.mode = rw
tsd.no_diediedie = false

tsd.stats.canonical = false